/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package sjkim.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Board service. Represents a row in the &quot;SJKIM_Board&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>sjkim.model.impl.BoardModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>sjkim.model.impl.BoardImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Board
 * @generated
 */
@ProviderType
public interface BoardModel extends BaseModel<Board> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a board model instance should use the {@link Board} interface instead.
	 */

	/**
	 * Returns the primary key of this board.
	 *
	 * @return the primary key of this board
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this board.
	 *
	 * @param primaryKey the primary key of this board
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the board no of this board.
	 *
	 * @return the board no of this board
	 */
	public long getBoardNo();

	/**
	 * Sets the board no of this board.
	 *
	 * @param boardNo the board no of this board
	 */
	public void setBoardNo(long boardNo);

	/**
	 * Returns the board title of this board.
	 *
	 * @return the board title of this board
	 */
	@AutoEscape
	public String getBoardTitle();

	/**
	 * Sets the board title of this board.
	 *
	 * @param boardTitle the board title of this board
	 */
	public void setBoardTitle(String boardTitle);

	/**
	 * Returns the board content of this board.
	 *
	 * @return the board content of this board
	 */
	@AutoEscape
	public String getBoardContent();

	/**
	 * Sets the board content of this board.
	 *
	 * @param boardContent the board content of this board
	 */
	public void setBoardContent(String boardContent);

	/**
	 * Returns the board writer of this board.
	 *
	 * @return the board writer of this board
	 */
	@AutoEscape
	public String getBoardWriter();

	/**
	 * Sets the board writer of this board.
	 *
	 * @param boardWriter the board writer of this board
	 */
	public void setBoardWriter(String boardWriter);

	/**
	 * Returns the board write date of this board.
	 *
	 * @return the board write date of this board
	 */
	public Date getBoardWriteDate();

	/**
	 * Sets the board write date of this board.
	 *
	 * @param boardWriteDate the board write date of this board
	 */
	public void setBoardWriteDate(Date boardWriteDate);

	/**
	 * Returns the board update date of this board.
	 *
	 * @return the board update date of this board
	 */
	public Date getBoardUpdateDate();

	/**
	 * Sets the board update date of this board.
	 *
	 * @param boardUpdateDate the board update date of this board
	 */
	public void setBoardUpdateDate(Date boardUpdateDate);

	/**
	 * Returns the board view count of this board.
	 *
	 * @return the board view count of this board
	 */
	public Long getBoardViewCount();

	/**
	 * Sets the board view count of this board.
	 *
	 * @param boardViewCount the board view count of this board
	 */
	public void setBoardViewCount(Long boardViewCount);

}